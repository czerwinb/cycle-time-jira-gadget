<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="__MSG_cycle-time-jira-gadget.directory-title__"
                 directory_title="__MSG_cycle-time-jira-gadget.name__"
                 author="Bartosz CzerwiÅ„ski"
                 author_email="ask@etmaze.com"
                 description="__MSG_cycle-time-jira-gadget.directory-description__">

        <Optional feature="gadget-directory">
            <Param name="categories">JIRA</Param>
        </Optional>

        <Require feature="setprefs"/>
        <Require feature="views"/>
        <Require feature="oauthpopup"/>
        <Require feature="settitle"/>
        <Require feature="minimessage"/>
        <Require feature="dynamic-height"/>

        #supportedLocales("gadget.common")
        #supportedLocales("cycle-time-jira-gadget")
        #supportLocales()
        #oauth()
    </ModulePrefs>

    <UserPref name="isConfigured" datatype="hidden" default_value="false"/>
    <UserPref name="projectOrFilterId" datatype="hidden"/>
    <UserPref name="displayCycleTime" datatype="hidden" default_value="true"/>
    <UserPref name="displayLeadTime" datatype="hidden" default_value="true"/>

    <Content type="html" view="profile">
        <![CDATA[
        #requireResource("com.atlassian.gadgets.publisher:ajs-gadgets")
        #requireResource("com.atlassian.jira.gadgets:common")
        #requireResource("com.etmaze.cycle-time-jira-gadget:cycle-time-jira-gadget-resources")
        #includeResources()

        <script type="text/javascript">
            (function() {
                var gadget = AJS.Gadget({
                    baseUrl: "__ATLASSIAN_BASE_URL__",
                    useOauth: "/rest/gadget/1.0/currentUser",
                    config: {
                        descriptor: function(args) {
                            gadgets.window.setTitle("__MSG_cycle-time-jira-gadget.directory-title__");
                            var gadget = this;
                            return {
                                theme: "long-label",
                                fields: [
                                    AJS.gadget.fields.nowConfigured(),
                                    AJS.gadget.fields.projectOrFilterPicker(gadget, "projectOrFilterId", args.filtersAndProjects),
                                    {
                                        type: "select",
                                        label: gadget.getMsg("cycle-time-jira-gadget.pref.displayCycleTime.label"),
                                        userpref: "displayCycleTime",
                                        selected: gadget.getPref("displayCycleTime"),
                                        options: [
                                            { label:gadget.getMsg("gadget.common.yes"), value:"true" },
                                            { label:gadget.getMsg("gadget.common.no"), value:"false" }
                                        ]
                                    },
                                    {
                                        type: "select",
                                        label: gadget.getMsg("cycle-time-jira-gadget.pref.displayLeadTime.label"),
                                        userpref: "displayLeadTime",
                                        selected: gadget.getPref("displayLeadTime"),
                                        options: [
                                            { label:gadget.getMsg("gadget.common.yes"), value:"true" },
                                            { label:gadget.getMsg("gadget.common.no"), value:"false" }
                                        ]
                                    }
                                ]
                            };
                        },
                        args: [
                            {
                                key: "filtersAndProjects",
                                ajaxOptions: "/rest/gadget/1.0/filtersAndProjects"
                            }
                        ]
                    },
                    view: {
                        onResizeAdjustHeight: true,
                        enableReload: true,
                        template: function (args) {
                            var gadget = this;
                            var searchResponse = args.searchResponse;

                            var createGadgetContainer = function() {
                                return AJS.$("<div/>").attr('id', 'cycle-time-gadget').appendTo(gadget.getView().empty());
                            };

                            var setupCycleTimeDisplayIn = function(container) {
                                if (gadget.getPref("displayCycleTime") === 'true') {
                                    container.append('<div class="time-box"><p id="cycle-time">Loading...</p></div>');
                                }
                            };

                            var displayCycleTime = function(cycleTime) {
                                AJS.$('#cycle-time').text(cycleTime);
                            }

                            var displayLeadTime = function(leadTime) {
                                AJS.$('#lead-time').text(leadTime);
                            }

                            var setupLeadTimeDisplayIn = function(container) {
                                if (gadget.getPref("displayLeadTime") === 'true') {
                                    container.append('<div class="time-box"><p id="lead-time">Loading...</p></div>');
                                }
                            };

                            var main = function() {
                                var container = createGadgetContainer();
                                setupCycleTimeDisplayIn(container);
                                setupLeadTimeDisplayIn(container);

                                var metrics = calculateMetricsFor(args.jiraStatuses, args.searchResponse);
                                displayCycleTime(metrics.cycleTime.average);
                                displayLeadTime(metrics.leadTime.average);
                            }

                            main();
                        },
                        args: [
                            {
                                key: "jiraStatuses",
                                ajaxOptions: "/rest/api/2/status"
                            },
                            {
                                key: "searchResponse",
                                ajaxOptions: function() {
                                    var projectOrFilterId = this.getPref("projectOrFilterId");
                                    return {
                                        url: "/rest/api/2/search",
                                        data: {
                                            jql: gadgets.util.unescapeString(projectOrFilterId.replace('-', '=')),
                                            expand: "changelog",
                                            maxResults: 1000
                                        }
                                    }
                                }
                            }
                        ]
                    }
                });
            }());
        </script>
        ]]>
    </Content>
</Module>